local icon = require("modules.ui.icons")

require("symbols-outline").setup({
	highlight_hovered_item = true,
	show_guides = true,
	auto_preview = false,
	position = "right",
	relative_width = true,
	width = 35,
	auto_close = false,
	show_numbers = false,
	show_relative_numbers = false,
	show_symbol_details = true,
	preview_bg_highlight = "Pmenu",
	autofold_depth = nil,
	auto_unfold_hover = true,
	fold_markers = { "", "" },
	wrap = false,
	keymaps = { -- These keymaps can be a string or a table for multiple keys
		close = { "<Esc>", "q" },
		goto_location = "<Cr>",
		focus_location = "o",
		hover_symbol = "<C-space>",
		toggle_preview = "K",
		rename_symbol = "r",
		code_actions = "a",
		fold = "h",
		unfold = "l",
		fold_all = "W",
		unfold_all = "E",
		fold_reset = "R",
	},
	lsp_blacklist = {},
	symbol_blacklist = {},
	symbols = {
		Class = { icon = icon.kind.Class .. " ", hl = "TSType" },
		Constant = { icon = icon.kind.Constant .. " ", hl = "TSConstant" },
		Constructor = { icon = icon.kind.Constructor .. " ", hl = "TSConstructor" },
		Enum = { icon = icon.kind.Enum .. " ", hl = "TSType" },
		EnumMember = { icon = icon.kind.EnumMember .. " ", hl = "TSField" },
		Event = { icon = icon.kind.Event .. " ", hl = "TSType" },
		Field = { icon = icon.kind.Field .. " ", hl = "TSField" },
		File = { icon = icon.kind.File .. " ", hl = "TSURI" },
		Function = { icon = icon.kind.Function .. " ", hl = "TSFunction" },
		Interface = { icon = icon.kind.Interface .. " ", hl = "TSType" },
		Key = { icon = icon.kind.Keyword .. " ", hl = "TSType" },
		Method = { icon = icon.kind.Method .. " ", hl = "TSMethod" },
		Module = { icon = icon.kind.Module .. " ", hl = "TSNamespace" },
		Namespace = { icon = icon.kind.Namespace .. " ", hl = "TSNamespace" },
		Operator = { icon = icon.kind.Operator .. " ", hl = "TSOperator" },
		Package = { icon = icon.kind.Package .. " ", hl = "TSNamespace" },
		Property = { icon = icon.kind.Property .. " ", hl = "TSMethod" },
		Struct = { icon = icon.kind.Struct .. " ", hl = "TSType" },
		TypeParameter = { icon = icon.kind.TypeParameter .. " ", hl = "TSParameter" },
		Variable = { icon = icon.kind.Variable .. " ", hl = "TSConstant" },
		-- Type
		Array = { icon = icon.type.Array .. " ", hl = "TSConstant" },
		Boolean = { icon = icon.type.Boolean .. " ", hl = "TSBoolean" },
		Null = { icon = icon.type.Null .. " ", hl = "TSType" },
		Number = { icon = icon.type.Number .. " ", hl = "TSNumber" },
		Object = { icon = icon.type.Object .. " ", hl = "TSType" },
		String = { icon = icon.type.String .. " ", hl = "TSString" },
	},
})

vim.keymap.set("n", "<leader>so", "<cmd>SymbolsOutline<cr>", { desc = "Symbols Outline" })
